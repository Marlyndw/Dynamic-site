import glob
import os
#import request
from django.http import HttpResponse
from django.shortcuts import render

#def index(request):
#    # This is similar to ones we have done before. Instead of keeping
#    # the HTML / template in a separate directory, we just reply with
#    # the HTML embedded here.
#    return HttpResponse('''
#        <h1>Welcome to my home page!</h1>
#        <a href="/about-me">About me</a> <br />
#        <a href="/github-api-example">See my GitHub contributions</a> <br />
#    ''')


def bio(request):
    # Django comes with a "shortcut" function called "render", that
    # lets us read in HTML template files in separate directories to
    # keep our code better organized.
    context = {
    
    "bio_is_active": "active",
     }
    
    return render(request, 'bio.html', context)


#def github_api_example(request):
#    # We can also combine Django with APIs
#    response = requests.get('https://api.github.com/users/michaelpb/repos')
#    repos = response.json()
#    context = {
#        'github_repos': repos,
#    }
#    return render(request, 'github.html', context)
#    



#all_html_files = glob.glob('content/*.html')
##print(all_html_files)
#output = glob.glob("docs'*.html'")
#base = open("template/base.html").read()
#pages = []

#def auto_generate():

#   for page in all_html_files:
#        page_content = os.path.basename(page)
#        name_only, entension = os.path.splitext(page_content)
#        
#        pages.append({
#        'file_name': page,
#        'output': page_content,
#        'title': name_only,
#        })
##        print('meow', pages)



#def process_page():
#    #print(pages)
#    for page in pages:
#        page_content = open(page['file_name']).read()
#        title = page["title"]
#        file_name = page["file_name"]
#        template = Template(base)
#        final_page = template.render(title=title, content=page_content, pages=pages)
#        output_filename = 'docs/' + page["output"]
#        open(output_filename, "w+").write(final_page)

#    '''
#    Fully process a single page dictionary
#    '''
#def main():


#    for page in pages:
#        #print('Processing', page['title'])
#        process_page()
#    print('Done!')

#if __name__ == '__main__':
#    auto_generate()
#    main()


